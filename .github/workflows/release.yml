name: release

on:
  schedule:
     - cron: "0 0 * * 1"
  workflow_dispatch:
permissions:
  contents: write
defaults:
  run:
    shell: bash
concurrency:
  group: "release"
  cancel-in-progress: true
jobs:
  init:
    runs-on: ubuntu-latest
    name: Init
    outputs:
        should_run: ${{ steps.should_run.outputs.should_run }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set version info
        run: |
            export DATE=$(git log -1 --format=%cd --date=format:%Y-%m-%d)
            export TAG_NAME=$(echo ${{ github.sha }} | cut -c1-7)
            export RELEASE_NAME="$DATE-$TAG_NAME"
            echo "$RELEASE_NAME"
            echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
            echo "RELEASE_NAME=$RELEASE_NAME" >> $GITHUB_ENV
      - id: should_run
        continue-on-error: true
        name: Check if updates have been published
        if: ${{ github.event_name == 'schedule' }}
        run: test -z $(git rev-list  --after="24 hours"  ${{ github.sha }}) && echo "::set-output name=should_run::false"

  build-x86-linux:
    runs-on: ubuntu-latest
    name: Build (x86 Linux)
    needs: [init]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install dependencies
        run: |
            sudo apt-get install ninja-build
            rustup component add llvm-tools-preview
      - name: Upstream
        run: src/ci/scripts/setup-upstream-remote.sh
      - name: Dist
        run: ./x.py dist --config src/bootstrap/defaults/config.dist.toml
      - name: Publish
        uses: actions/upload-artifact@v4
        with:
          name: bsan-x86-linux
          path: build/dist/rust-nightly-x86_64-unknown-linux-gnu.tar.xz
  build-arm64-macos: 
    runs-on: macos-latest
    name: Build (arm64 macOS)
    needs: [init]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install dependencies
        run: |
            brew install ninja
      - name: Upstream
        run: src/ci/scripts/setup-upstream-remote.sh
      - name: Dist
        run: ./x.py dist --config src/bootstrap/defaults/config.dist.toml
      - name: Publish
        uses: actions/upload-artifact@v4
        with:
          name: bsan-arm64-macos
          path: build/dist/rust-nightly-aarch64-apple-darwin.tar.xz

  release:
    name: Update rolling release
    needs: [init, build-arm64-macos, build-x86-linux]
    runs-on: macos-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: artifacts
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: rolling
          prerelease: true
          files: |
            artifacts/*.tar.xz
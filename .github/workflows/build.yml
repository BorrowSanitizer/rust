name: build
'on':
  pull_request:
    branches:
      - bsan
    paths:
      - '**/*.rs'
      - '**/*.toml'
      - '**/*.yml'
      - src/llvm-project
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch: null
permissions:
  contents: read
defaults:
  run:
    shell: bash
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        config:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            free_disk: true
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-24.04-arm
            free_disk: true
    runs-on: '${{ matrix.config.os }}'
    name: '${{ matrix.config.target }}'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install dependencies
        run: |
          git submodule update --init src/tools/bsan
          rustup component add llvm-tools
          cp src/bootstrap/defaults/bootstrap.bsan.dev.toml bootstrap.toml
  
      - name: Free up disk space
        run: src/ci/scripts/free-disk-space.sh
        if: matrix.config.free_disk

      - name: Configure LLVM
        run: |
          export LLVM_COMMIT=$(git ls-tree --object-only --abbrev=7 HEAD src/llvm-project)
          echo "LLVM_COMMIT=$LLVM_COMMIT" >> $GITHUB_ENV

      - name: Cache LLVM
        id: cache-llvm
        uses: actions/cache@v4
        with:
          path: llvm.tar.gz
          key: ${{ matrix.config.target }}-${{ matrix.config.os }}-${{ env.LLVM_COMMIT }}

      - name: Decompress LLVM
        if: steps.cache-llvm.outputs.cache-hit == 'true'
        run: |
          mkdir -p build/host/llvm
          tar -xzvf llvm.tar.gz
          
      - name: Build LLVM
        run: ./x.py build llvm --stage 1

      - name: Compress LLVM
        if: steps.cache-llvm.outputs.cache-hit != 'true'
        run: tar -czvf llvm.tar.gz build/${{ matrix.config.target }}/llvm        
      - name: Save LLVM
        if: steps.cache-llvm.outputs.cache-hit != 'true'
        id: cache-llvm-save
        uses: actions/cache/save@v4
        with:
          path: llvm.tar.gz
          key: ${{ matrix.config.target }}-${{ matrix.config.os }}-${{ env.LLVM_COMMIT }}

      - name: Build
        run: ./x.py build --stage 1
      - name: Unit Tests
        run: |
          ./x.py test src/tools/bsan/bsan-rt --stage 1
          ./x.py test src/tools/bsan/bsan-shared --stage 1
          ./x.py test src/tools/bsan/cargo-bsan --stage 1
      - name: UI Tests
        run: |
          /x.py test src/tools/bsan/bsan-driver --stage 2